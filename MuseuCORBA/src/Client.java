import MuseumBell.Bell;
import MuseumBell.BellHelper;
import MuseumGate.Gate;
import MuseumGate.GateHelper;
import MuseumGuard.Guard;
import MuseumGuard.GuardHelper;
import java.util.Properties;
import javax.swing.JOptionPane;
import org.omg.CORBA.ORB;
import org.omg.CosNaming.NameComponent;
import org.omg.CosNaming.NamingContext;
import org.omg.CosNaming.NamingContextHelper;

/**
 * Created by Rubens Santos Barbosa. CORBA - Museum Control - October 2018
 */
public class Client extends javax.swing.JFrame {

    private NamingContext namingServer;
    private int visitosMuseum = 0;
    private boolean dayMuseum = true;
    private Gate skeletonGate;
    private Guard skeletonGuard;
    private Bell skeletonBell;

    public Client(NamingContext naming) {
        this.setNamingServer(naming);

        conection();
        
        initComponents();
    }

    public NamingContext getNamingServer() {
        return namingServer;
    }

    public void setNamingServer(NamingContext namingServer) {
        this.namingServer = namingServer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        plus = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        night = new javax.swing.JButton();
        day = new javax.swing.JButton();
        qtde = new javax.swing.JLabel();
        bellRing = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle de Museu");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        plus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/midias/add.png"))); // NOI18N
        plus.setBorderPainted(false);
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });
        getContentPane().add(plus, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 144, 30, 30));

        minus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/midias/minuss.png"))); // NOI18N
        minus.setBorderPainted(false);
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });
        getContentPane().add(minus, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 144, 30, 30));

        night.setIcon(new javax.swing.ImageIcon(getClass().getResource("/midias/half-moon.png"))); // NOI18N
        night.setBorderPainted(false);
        night.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nightActionPerformed(evt);
            }
        });
        getContentPane().add(night, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 14, 40, 40));

        day.setIcon(new javax.swing.ImageIcon(getClass().getResource("/midias/sun.png"))); // NOI18N
        day.setBorderPainted(false);
        day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayActionPerformed(evt);
            }
        });
        getContentPane().add(day, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 14, 40, 40));

        qtde.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        getContentPane().add(qtde, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 44, 40, 50));

        bellRing.setIcon(new javax.swing.ImageIcon(getClass().getResource("/midias/alarm-3.png"))); // NOI18N
        bellRing.setBorderPainted(false);
        bellRing.setEnabled(false);
        getContentPane().add(bellRing, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/midias/museum.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed

        // System.out.println("plus");
        int send2Guard = 0;
        try {

            // inserindo pessoas no museu
            skeletonGate.insertPerson(1);
            // atualizando a lista de pessoas
            send2Guard = skeletonGate.updatePeople();
            // envia qtde de pessoas pro guarda
            visitosMuseum = skeletonGuard.getAmountVisitor(send2Guard);
            //System.out.println("plus");
            //qtde.setText(String.valueOf(intValue));

            qtde.setText(String.valueOf(skeletonGuard.getAmountVisitor(send2Guard)));

        } catch (Exception e) {
            System.err.println("insert error" + e);
        }

    }//GEN-LAST:event_plusActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed

        int send2Guard = 0;
        try {

            // removendo pessoas do museu
            skeletonGate.removePerson(1);
            // atualizando a lista de pessoas
            send2Guard = skeletonGate.updatePeople();
            // envia qtde de pessoas pro guarda
            visitosMuseum = skeletonGuard.getAmountVisitor(send2Guard);
            
            qtde.setText(String.valueOf(skeletonGuard.getAmountVisitor(send2Guard)));

        } catch (Exception e) {
            System.err.println("remove error" + e);
        }

    }//GEN-LAST:event_minusActionPerformed

    private void dayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayActionPerformed
        boolean aux;
        dayMuseum = skeletonGuard.changeDayPeriod(true);
        aux = skeletonBell.ringBell(dayMuseum, visitosMuseum);
        
        if (aux == false) {
            // para o alarme
            bellRing.setEnabled(false);
        } 
    }//GEN-LAST:event_dayActionPerformed

    private void nightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nightActionPerformed
        boolean aux;
        dayMuseum = skeletonGuard.changeDayPeriod(false);
        aux = skeletonBell.ringBell(dayMuseum, visitosMuseum);
        
        if (aux == true) {
            // acende o alarme
            bellRing.setEnabled(true);
        } 
    }//GEN-LAST:event_nightActionPerformed
    
    public void conection() {
        try {

            NameComponent[] name = {new NameComponent("Gate", "")};

            org.omg.CORBA.Object objReferenceGate = namingServer.resolve(name);

            skeletonGate = GateHelper.narrow(objReferenceGate);

        } catch (Exception e) {
            System.out.println("Error: " + e);
            e.printStackTrace(System.out);
        }

        try {

            NameComponent[] name = {new NameComponent("Guard", "")};

            org.omg.CORBA.Object objReferenceGuard = namingServer.resolve(name);

            skeletonGuard = GuardHelper.narrow(objReferenceGuard);

        } catch (Exception e) {
            System.out.println("Error: " + e);
            e.printStackTrace(System.out);
        }

        try {

            NameComponent[] name = {new NameComponent("Bell", "")};

            org.omg.CORBA.Object objReferenceBell = namingServer.resolve(name);

            skeletonBell = BellHelper.narrow(objReferenceBell);

        } catch (Exception e) {
            System.out.println("Error: " + e);
            e.printStackTrace(System.out);
        }
    }

    public static void main(String args[]) {
        
        String inputNameServerIP = null;
        String nameServerIP = null;
        String inputNameServerPort = null;
        String nameServerPort = null;

        // Pegando o endereço IP do Servidor de Nomes
        inputNameServerIP = JOptionPane.showInputDialog("Digite o endereço IP do Servidor de Nomes");
        if (inputNameServerIP == null) {
            System.exit(0);
        } else if (inputNameServerIP.equals("localhost") || inputNameServerIP.matches("\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3}")) {
            nameServerIP = inputNameServerIP;
        } else {
            JOptionPane.showMessageDialog(null, "Endereço inválido");
            System.exit(0);
        }

        // Pegando a porta do Servidor de Nomes
        inputNameServerPort = JOptionPane.showInputDialog("Digite a porta do Servidor de Nomes");
        if (inputNameServerPort == null) {
            System.exit(0);
        } else if (inputNameServerPort.matches("\\d{1,6}")) {
            nameServerPort = inputNameServerPort;
        } else {
            JOptionPane.showMessageDialog(null, "Porta inválida");
            System.exit(0);
        }

        Properties properties = new Properties();
        if (!(nameServerIP == null) && !(nameServerPort == null)) {

            properties.put("org.omg.CORBA.ORBInitialHost", nameServerIP);
            properties.put("org.omg.CORBA.ORBInitialPort", nameServerPort);
        }

        NamingContext nameServer = null;
        try {

            ORB orb = ORB.init(args, properties);
            org.omg.CORBA.Object objReference = orb.resolve_initial_references("NameService");

            nameServer = NamingContextHelper.narrow(objReference);

        } catch (Exception e) {
            System.out.println("Error: " + e);
            e.printStackTrace(System.out);
        }

        /* Create and display the form */
        Client frame = new Client(nameServer);
        frame.setVisible(true);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton bellRing;
    private javax.swing.JButton day;
    private javax.swing.JButton minus;
    private javax.swing.JButton night;
    private javax.swing.JButton plus;
    private javax.swing.JLabel qtde;
    // End of variables declaration//GEN-END:variables
}
